{"version":3,"sources":["Components/Badge/Badge.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SpecialChars","label","i","tempLabel","length","push","join","Badge","url","badge","useState","snackbarStatus","setSnackbarStatus","tech","res","techs","forEach","tags","includes","CheckForTech","toLowerCase","trim","version","externalURL","SnackbarHandler","event","reason","hasLogo","style","Grid","item","xs","textAlign","minHeight","maxHeight","alt","src","md","Button","size","variant","onClick","navigator","clipboard","writeText","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","severity","sx","width","logo","labelColor","hasVersion","hasNoVersion","App","setBadge","BadgeHandler","value","target","name","BadgeOptionsHandler","checked","Container","maxWidth","container","spacing","display","alignContent","height","FormControl","fullWidth","TextField","onChange","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","InputLabel","Select","MenuItem","FormLabel","component","FormGroup","row","FormControlLabel","control","className","Box","Typography","Link","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.229e2008.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n//Import data\r\nimport techs from '../../Data/technologies.json';\r\n\r\n\r\n//Material design\r\nimport Alert from '@mui/material/Alert';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\n\r\n//Check if input techonolgy is on the list\r\nconst CheckForTech = (label) => {\r\n\tlet res = null;\r\n\t\r\n\ttechs.forEach( tech => {\r\n\t\tif(tech.tags.includes(label)){\r\n\t\t\tres = tech;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn res;\r\n};\r\n\r\n//Change special characters\r\nconst SpecialChars = (label) => {\r\n\tlet tempLabel = [];\r\n\tlet i;\r\n\r\n\tfor( i=0; i<label.length; i++ ){\r\n\t\tif( label[i] === \"+\" ){\r\n\t\t\ttempLabel.push(\"%2B\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif( label[i] === \"#\" ){\r\n\t\t\ttempLabel.push(\"%23\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ttempLabel.push( label[i] );\r\n\t}\r\n\r\n\ttempLabel = tempLabel.join('');\r\n\t\r\n\treturn tempLabel;\r\n}\r\n\r\n//Component content\r\nconst Badge = ({badge}) => {\r\n\tconst [ snackbarStatus, setSnackbarStatus ] = useState(false);\r\n\r\n\tconst tech = CheckForTech(badge.label.toLowerCase().trim());\r\n\tconst version = badge.version.length === 0 ? \"Version\" : badge.version;\r\n\tconst externalURL = badge.externalURL;\r\n\tlet url;\r\n\r\n\tconst SnackbarHandler = (event, reason) => {\r\n\t\tif(reason === 'clickaway'){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetSnackbarStatus(false);\r\n\t};\r\n\r\n\t//If there's no results...\r\n\tif( tech === null && badge.hasLogo ){\r\n\t\tconst label = badge.label.length === 0 ? \"Technology\" : SpecialChars(badge.label);\r\n\t\turl = `https://img.shields.io/badge/${version}-999999?style=${badge.style}&logo=${label}&label=${label}&labelColor=333333`;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Grid item xs={12} textAlign=\"center\" minHeight=\"4em\" maxHeight=\"4em\" >\r\n\t\t\t\t\t<img alt=\"Badge with version\" src={url} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(url);\r\n\t\t\t\t\t\t\tsetSnackbarStatus(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCopy badge URL\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`\r\n\t\t\t\t\t\t\t\t[![${badge.label}](${url})](${externalURL})\r\n\t\t\t\t\t\t\t`);\r\n\t\t\t\t\t\t\tsetSnackbarStatus(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCopy Markdown URL\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n\t\t\t\t\t\r\n\t\t\t\t\topen={snackbarStatus}\r\n\t\t\t\t\tautoHideDuration={1500}\r\n\t\t\t\t\tonClose={SnackbarHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tonClose={SnackbarHandler}\r\n\t\t\t\t\t\tseverity=\"success\"\r\n\t\t\t\t\t\tsx={{ width: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBadge copied successfully!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tif( tech === null && !badge.hasLogo ){\r\n\t\tconst label = badge.label.length === 0 ? \"Technology\" : SpecialChars(badge.label);\r\n\t\turl = `https://img.shields.io/badge/${version}-999999?style=${badge.style}&label=${label}&labelColor=333333`;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Grid item xs={12} textAlign=\"center\" minHeight=\"4em\" maxHeight=\"4em\" >\r\n\t\t\t\t\t<img alt=\"Badge with version\" src={url} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(url);\r\n\t\t\t\t\t\t\tsetSnackbarStatus(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCopy badge URL\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" >\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`\r\n\t\t\t\t\t\t\t\t[![${badge.label}](${url})](${externalURL})\r\n\t\t\t\t\t\t\t`);\r\n\t\t\t\t\t\t\tsetSnackbarStatus(true);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCopy Markdown URL\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n\t\t\t\t\t\r\n\t\t\t\t\topen={snackbarStatus}\r\n\t\t\t\t\tautoHideDuration={1500}\r\n\t\t\t\t\tonClose={SnackbarHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tonClose={SnackbarHandler}\r\n\t\t\t\t\t\tseverity=\"success\"\r\n\t\t\t\t\t\tsx={{ width: '100%' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBadge copied successfully!\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tif( tech !== null && badge.label.length === 0 ){\r\n\t\turl = `https://img.shields.io/badge/${version}-999999?style=${badge.style}&label=Technology&labelColor=333333`;\r\n\t};\r\n\r\n\tconst logo = badge.hasLogo ? `&logo=${tech.label}` : \"\";\r\n\tconst labelColor = `&labelColor=${tech.hasVersion.label}`;\r\n\t\r\n\tif( tech !== null && badge.hasVersion ){\r\n\t\tconst label = badge.label.length === 0 ? `&label=Technology` : `&label=${SpecialChars(badge.label)}`;\r\n\t\turl = `https://img.shields.io/badge/${version}-${tech.hasVersion.version}?style=${badge.style}${logo}${label}${labelColor}`\r\n\t};\r\n\r\n\tif( tech !== null && !badge.hasVersion ){\r\n\t\tconst label = SpecialChars(badge.label);\r\n\t\turl = `https://img.shields.io/badge/${label}-${tech.hasNoVersion}?style=${badge.style}${logo}`\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid item xs={12} textAlign=\"center\" minHeight=\"4em\" maxHeight=\"4em\" >\r\n\t\t\t\t<img alt=\"Badge with version\" src={url} />\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" >\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tnavigator.clipboard.writeText(url);\r\n\t\t\t\t\t\tsetSnackbarStatus(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy badge URL\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" >\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tnavigator.clipboard.writeText(`\r\n\t\t\t\t\t\t\t[![${badge.label}](${url})](${externalURL})\r\n\t\t\t\t\t\t`);\r\n\t\t\t\t\t\tsetSnackbarStatus(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tCopy Markdown URL\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n\t\t\t\t\r\n\t\t\t\topen={snackbarStatus}\r\n\t\t\t\tautoHideDuration={1500}\r\n\t\t\t\tonClose={SnackbarHandler}\r\n\t\t\t>\r\n\t\t\t\t<Alert\r\n\t\t\t\t\tonClose={SnackbarHandler}\r\n\t\t\t\t\tseverity=\"success\"\r\n\t\t\t\t\tsx={{ width: '100%' }}\r\n\t\t\t\t>\r\n\t\t\t\t\tBadge copied successfully!\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Badge; //Export component","import React, { useState } from 'react';\r\n\r\n\r\n//Styles\r\nimport './App.css';\r\n\r\n//Material design\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport CheckBox from '@mui/material/Checkbox';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\n\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\n//Custom components\r\nimport Badge from './Components/Badge';\r\n\r\n\r\n//Component content\r\nconst App = () => {\r\n\r\n\t//Badge information\r\n\tconst [ badge, setBadge ] = useState({\r\n\t\tlabel: \"\",\r\n\t\thasVersion: true,\r\n\t\thasLogo: true,\r\n\t\tstyle: \"for-the-badge\",\r\n\t\tlogo: \"\",\r\n\t\tlabelColor: \"\",\r\n\t\tversion: \"\",\r\n\t\texternalURL: \"\"\r\n\t});\r\n\r\n\tconst BadgeHandler = (event) => {\r\n\t\tconst value = event.target.value;\r\n\t\tconst name = event.target.name;\r\n\t\tsetBadge({\r\n\t\t\t...badge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst BadgeOptionsHandler = (event) => {\r\n\t\tconst value = event.target.checked;\r\n\t\tconst name = event.target.name;\r\n\t\tsetBadge({\r\n\t\t\t...badge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\t//Clear label\r\n\tconst ClearBadgeLabelHandler = (event) => {\r\n\t\tsetBadge({\r\n\t\t\t...badge,\r\n\t\t\tlabel: \"\"\r\n\t\t});\r\n\t};\r\n\r\n\t//Clear version\r\n\tconst ClearBadgeVersionHandler = (event) => {\r\n\t\tsetBadge({\r\n\t\t\t...badge,\r\n\t\t\tversion: \"\"\r\n\t\t});\r\n\t};\r\n\r\n\t//Clear External URL\r\n\tconst ClearBadgeExternalURLHandler = (event) => {\r\n\t\tsetBadge({\r\n\t\t\t...badge,\r\n\t\t\texternalURL: \"\"\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<main>\r\n\t\t\t\t<Container maxWidth=\"sm\" >\r\n\t\t\t\t\t<Grid container spacing={2} display=\"flex\" alignContent=\"center\" height=\"100vh\" >\r\n\t\t\t\t\t\t<Badge badge={badge} /> {/*Badge*/}\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}> {/*Label*/}\r\n\t\t\t\t\t\t\t<FormControl fullWidth >\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tname=\"label\"\r\n\t\t\t\t\t\t\t\t\tvalue={badge.label}\r\n\t\t\t\t\t\t\t\t\tonChange={BadgeHandler}\r\n\r\n\t\t\t\t\t\t\t\t\tlabel=\"Technology\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"Framework, library, etc.\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"standard\"\r\n\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbadge.label.length === 0 ? null : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton onClick={ClearBadgeLabelHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}> {/*Version*/}\r\n\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tname=\"version\"\r\n\t\t\t\t\t\t\t\t\tvalue={badge.version}\r\n\t\t\t\t\t\t\t\t\tonChange={BadgeHandler}\r\n\r\n\t\t\t\t\t\t\t\t\tlabel=\"Version\"\r\n\t\t\t\t\t\t\t\t\thelperText=\" \"\r\n\t\t\t\t\t\t\t\t\tvariant=\"standard\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbadge.version.length === 0 ? null : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton onClick={ClearBadgeVersionHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12}> {/*External URL*/}\r\n\t\t\t\t\t\t\t<FormControl fullWidth>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tname=\"externalURL\"\r\n\t\t\t\t\t\t\t\t\tvalue={badge.externalURL}\r\n\t\t\t\t\t\t\t\t\tonChange={BadgeHandler}\r\n\r\n\t\t\t\t\t\t\t\t\tlabel=\"External URL\"\r\n\t\t\t\t\t\t\t\t\thelperText=\"When badge is clicked will visit this URL\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"standard\"\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\tendAdornment:\r\n\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbadge.externalURL.length === 0 ? null : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton onClick={ClearBadgeExternalURLHandler}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClearIcon/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} md={6} > {/*Style*/}\r\n\t\t\t\t\t\t\t<FormControl fullWidth variant=\"standard\" >\r\n\t\t\t\t\t\t\t\t<InputLabel >Style</InputLabel>\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tname=\"style\"\r\n\t\t\t\t\t\t\t\t\tvalue={badge.style}\r\n\t\t\t\t\t\t\t\t\tonChange={BadgeHandler}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlabel=\"Style\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"standard\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"for-the-badge\" >For the badge</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"flat\" >Flat</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"flat-square\" >Flat square</MenuItem>\r\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"plastic\" >Plastic</MenuItem>\r\n\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} md={6} textAlign=\"center\" > {/*Options*/}\r\n\t\t\t\t\t\t\t<FormLabel component=\"legend\" >Options</FormLabel>\r\n\t\t\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t\t\t<FormGroup row >\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Logo\"\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<CheckBox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"hasLogo\"\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={badge.hasLogo}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={BadgeOptionsHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Version\"\r\n\t\t\t\t\t\t\t\t\t\tcontrol={<CheckBox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"hasVersion\"\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={badge.hasVersion}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={BadgeOptionsHandler}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Container>\r\n\t\t\t</main>\r\n\t\t\t<footer className=\"footer\">\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Typography textAlign=\"center\" variant=\"subtitle1\" >\r\n\t\t\t\t\t\t<Link href=\"https://opencollective.com/shields\" >\r\n\t\t\t\t\t\t\tConsider donating to shields.io developers!\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</footer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App; //Export component","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//Styles\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}